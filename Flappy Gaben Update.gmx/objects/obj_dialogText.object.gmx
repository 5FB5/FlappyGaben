<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fileWriteResult();

file = file_text_open_read("lang.txt");
langs = file_text_read_real(file);
file_text_close(file);

fileScore = file_text_open_read("bestScore.sav");
bestScore = file_text_read_real(fileScore);
file_text_close(fileScore);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var fontColor = make_color_rgb(72, 70, 65);

draw_set_font(font_menu);
draw_set_color(fontColor);
draw_set_alpha(1);

switch(langs) {
    case 0 : {
        draw_set_font(font_menu);
        draw_set_color(fontColor);
        draw_text(self.x - 270, self.y - 125, "Score: " +string(global._playerScore));
        draw_text(self.x - 270, self.y - 65, "Money: " +string(global._coinNumber));
        
        draw_set_color(make_color_rgb(217, 200, 11));
        draw_set_font(font_BestScore);
        /*draw_text((window_get_width() / 2) - 260, (window_get_height() / 2) - 310, "Best Score: ");
        draw_text((window_get_width() / 2) - 42, (window_get_height() / 2) - 230 , bestScore);*/
        draw_text(obj_dBoxMain.x - 245, obj_dBoxMain.y - 310, "Best Score: ");
        draw_text(obj_dBoxMain.x - 50, obj_dBoxMain.y - 230, bestScore);
    }
    break;
    
    case 1 : {
        draw_set_font(font_menu);
        draw_set_color(fontColor);
        draw_text(self.x - 270, self.y - 125, "Очки: " +string(global._playerScore));
        draw_text(self.x - 270, self.y - 65, "Деньги: " +string(global._coinNumber));
        
        draw_set_color(make_color_rgb(217, 200, 11));
        draw_set_font(font_bestScore_text);
        //draw_set_font(font_BestScore);
        /*draw_text((window_get_width() / 2) - 320, (window_get_height() / 2) - 310, "Лучший результат: ");
        draw_text((window_get_width() / 2) - 40, (window_get_height() / 2) - 235 , bestScore);*/
        draw_text(obj_dBoxMain.x - 320, obj_dBoxMain.y - 310, "Лучший результат: ");
        draw_set_font(font_BestScore);
        draw_text(obj_dBoxMain.x - 50, obj_dBoxMain.y - 230, bestScore);
    }
    break;
    
    default : break;
}
/*draw_text(self.x - 270, self.y - 125, "Score: " +string(global._playerScore));
draw_text(self.x - 270, self.y - 65, "Money: " +string(global._coinNumber));
*/
draw_set_font(font_dialog);

if (global.gamepad_realCount &gt; 0) {
    switch(langs) {
    case 0 : {
        aButton = "A";
        bButton = "B";
        
        draw_set_color(c_green);
        draw_text(self.x - 270, self.y + 15 , aButton);
        draw_set_color(fontColor);
        draw_text(self.x - 250, self.y + 15, " - Restart")
        
        draw_set_color(c_red);
        draw_text(self.x - 270, self.y + 55, bButton);
        draw_set_color(fontColor);
        draw_text(self.x - 250, self.y + 55 , " - Menu");
    }
    break;
    
    case 1 : {
        aButton = "A";
        bButton = "B";
        
        draw_set_color(c_green);
        draw_text(self.x - 270, self.y + 15 , aButton);
        draw_set_color(fontColor);
        draw_text(self.x - 250, self.y + 15, " - Перезапуск")
        
        draw_set_color(c_red);
        draw_text(self.x - 270, self.y + 55, bButton);
        draw_set_color(fontColor);
        draw_text(self.x - 250, self.y + 55 , " - Меню");
    }
    break;
    
    default : break;
}
    
    
   /* draw_text(self.x - 270, self.y + 15 , "A - Restart");
    draw_text(self.x - 270, self.y + 55 , "B - Menu");*/
    
 } 
  else {
      switch(langs) {
            case 0 : {
                draw_set_color(fontColor);
                draw_text(self.x - 270, self.y + 15 , "Space/LMB - Restart");
                draw_text(self.x - 270, self.y + 55 , "ESC - Menu");
            }
            break;
    
            case 1 : {
                draw_set_color(fontColor);
                draw_text(self.x - 270, self.y + 15 , "Пробел/ЛКМ - Перезапуск");
                draw_text(self.x - 270, self.y + 55 , "ESC - Меню");
            }
            break;
    
        default : break;
    }   
}

depth = -6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
