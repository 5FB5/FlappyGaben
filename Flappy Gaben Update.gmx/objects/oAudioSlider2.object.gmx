<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sAudioSlider</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -1021;
globalvar slider2CanClick, slider2RightLimit, slider2LeftLimit;
var xx, grab, barLength, percentage, clicked;
xx = 0;
grab = false;
slider2CanClick = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamepadSupport();

xx = 0;


if (gamepad_realCount &gt; 0) {
    gamepad_set_axis_deadzone(current_id, 0.3);
    
    x += gamepad_axis_value(current_id, gp_axisrh) * 6;
    
    if ((x + xx) &gt; slider2LeftLimit) &amp;&amp; ((x + xx) &lt; slider2RightLimit) {
        x += (gamepad_axis_value(current_id, gp_axisrh) * 5) + xx;
    }
     else if ((x + xx) &lt; slider2LeftLimit) {
         x = slider2LeftLimit;
     }
      else if ((x + xx) &gt; slider2RightLimit) {
          x = slider2RightLimit;
      }
    
    percentage = round( ((x - slider2LeftLimit) / (slider2RightLimit - slider2LeftLimit)) * 100 );
    globalSound = percentage / 100;
    clicked = false;
 }
  else {
      if (!mouse_check_button(mb_left)) {
          grab = false;
    }

    if (grab == false) &amp;&amp; (clicked == false) {
        exit;
    }
    else {
        if ((mouse_x + xx) &gt; slider2LeftLimit) &amp;&amp; ((mouse_x + xx) &lt; slider2RightLimit)  {
            x = mouse_x + xx;
        }
        else if ((mouse_x + xx ) &lt; slider2LeftLimit) {
            x = slider2LeftLimit;
        }
        else if ((mouse_x + xx) &gt; slider2RightLimit) {
            x = slider2RightLimit;
        }
  }
  
    percentage = round( ((x - slider2LeftLimit) / (slider2RightLimit - slider2LeftLimit)) * 100 );
    globalSound = percentage / 100;
    clicked = false;
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (gamepad_realCount &gt; 0) {
    
 } 
  else {
    window_set_cursor(cr_default);
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (gamepad_realCount &gt; 0) {
    
 } 
  else {
    window_set_cursor(cr_drag);
 }

if (slider2CanClick) {
    grab = true;
    xx = x - mouse_x;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sAudioSlider, 0, x, y, 1, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
