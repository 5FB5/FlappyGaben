<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>my_console = console_create();

/*****************************
* This allows you to override
* the default settings for the
* console system.
*****************************/
console_settings(my_console,",",false);

/*****************************
* This loads some preset commands
* into the console system.
*****************************/
console_preset(my_console);

/*****************************
* This loads all the available
* commands from a text file,
* which will be shown as suggestions
* whilst the user types.
*****************************/
//console_text_open(my_console,"commands.txt");

/*****************************
* You can also add individual
* commands to the suggestions
* list.
*****************************/

console_add(my_console, "dev");
console_add(my_console, "map"+s+" 0-menu, 1-game, 2-shop, 3-shopList2, 4-credits, 5-archTest ");
console_add(my_console, "quit");
console_add(my_console, "player set_money");
console_add(my_console, "player set_score");
console_add(my_console, "set_vsync");

console_add(my_console, "file set_skinData1");
console_add(my_console, "file set_skinData2");
console_add(my_console, "file set_skinData3");
console_add(my_console, "file set_skinData4");

console_add(my_console, "file set_bonusData1");
console_add(my_console, "file set_bonusData2");
console_add(my_console, "file set_bonusData3");
console_add(my_console, "file set_bonusData4");

console_add(my_console, "file set_ach1Data");
console_add(my_console, "file set_ach2Data");
console_add(my_console, "file set_ach3Data");
console_add(my_console, "file set_ach4Data");
console_add(my_console, "file set_ach5Data");
console_add(my_console, "file set_ach6Data");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*****************************
* Remember to destroy console
* system when no longer needed,
* to free up memory.
*****************************/
console_destroy(my_console);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if console_submit(my_console) {


    if console_cmd(my_console, "player set_money") { //PLAYER_MONEY
       Money = console_value(my_console, 1);
       file = file_text_open_write("playerMoney.txt");
       file_text_write_real(file, Money);
       file_text_close(file);
    }
    
    if console_cmd(my_console, "player set_score") {
        if (roomName == "r_gameplay") {
            m_playerScore = console_value(my_console, 1);
            global._playerScore = m_playerScore;
        }
    }

    if console_cmd(my_console, "set_vsync") { // vsync off/on
        value = console_value(my_console, 1);
        
        file = file_text_open_write("options.sav");
        file_text_write_real(file, value);
        file_text_close(file);
    }
    
    if console_cmd(my_console, "dev") {
        devValue = console_value(my_console, 1);
        if (file_exists("dev.sav")) {   // developer mode
            file = file_text_open_write("dev.sav");
            file_text_write_real(file, devValue);
            file_text_close(file);
        }
    }
    
    if console_cmd(my_console, "quit") {
        game_end();
    }
    
    if console_cmd(my_console, "map") { // change map
        currentMap = console_value(my_console, 1);
        
        switch(currentMap) {
            case 0: room_goto(r_menu)
                    break;
            case 1: room_goto(r_gameplay)
                    break;
            case 2: room_goto(r_shop)
                    break;
            case 3: room_goto(r_shop2)
                    break;
            case 4: room_goto(r_credits)
                    break;
            case 5: room_goto(r_achvTest)
                    break;
        }
        
    }
    
    if console_cmd(my_console, "file set_skinData1") { // activate 1 skin
        value = console_value(my_console, 1);
        
        file = file_text_open_write("skinData1.txt");
        file_text_write_real(file, value);
        file_text_close(file);
    }
    
    if console_cmd(my_console, "file set_skinData2") { // activate 2 skin
        value = console_value(my_console, 1);
        
        file = file_text_open_write("skinData2.txt");
        file_text_write_real(file, value);
        file_text_close(file);
    }
    
    if console_cmd(my_console, "file set_skinData3") { // activate 3 skin
        value = console_value(my_console, 1);
        
        file = file_text_open_write("skinData3.txt");
        file_text_write_real(file, value);
        file_text_close(file);
    }
    
    if console_cmd(my_console, "file set_skinData4") { // activate 4 skin
        value = console_value(my_console, 1);
        
        file = file_text_open_write("skinData4.txt");
        file_text_write_real(file, value);
        file_text_close(file);
    }

    if console_cmd(my_console, "file set_bonusData1") { // activate 1 bonus
        value = console_value(my_console, 1);
        
        file = file_text_open_write("bonusData1.txt");
        file_text_write_real(file, value);
        file_text_close(file);
    }
    
    if console_cmd(my_console, "file set_bonusData2") { // activate 2 bonus
        value = console_value(my_console, 1);
        
        file = file_text_open_write("bonusData2.txt");
        file_text_write_real(file, value);
        file_text_close(file);
    }
    
    if console_cmd(my_console, "file set_bonusData3") { // activate 3 bonus
        value = console_value(my_console, 1);
        
        file = file_text_open_write("bonusData3.txt");
        file_text_write_real(file, value);
        file_text_close(file);
    }
    
    if console_cmd(my_console, "file set_bonusData4") { // activate 4 bonus
        value = console_value(my_console, 1);
        
        file = file_text_open_write("bonusData4.txt");
        file_text_write_real(file, value);
        file_text_close(file);
    }
    
    if console_cmd(my_console, "file set_ach1Data") { // activate "Maks" achievement
        value = console_value(my_console, 1);
        
        file = file_text_open_write("achiev1.txt");
        file_text_write_real(file, value);
        file_text_close(file);
    }
    
    if console_cmd(my_console, "file set_ach2Data") { // activate "new year" achievement
        value = console_value(my_console, 1);
        
        file = file_text_open_write("achiev2.txt");
        file_text_write_real(file, value);
        file_text_close(file);
    }
    
    if console_cmd(my_console, "file set_ach3Data") { // activate "50 tubes" achievement
        value = console_value(my_console, 1);
        
        file = file_text_open_write("achiev3.txt");
        file_text_write_real(file, value);
        file_text_close(file);
    }
    
    if console_cmd(my_console, "file set_ach4Data") { // activate "100 money" achievement
        value = console_value(my_console, 1);
        
        file = file_text_open_write("achiev4.txt");
        file_text_write_real(file, value);
        file_text_close(file); 
    }
    
    if console_cmd(my_console, "file set_ach5Data") { // activate "500 money" achievement
        value = console_value(my_console, 1);
        
        file = file_text_open_write("achiev5.txt");
        file_text_write_real(file, value);
        file_text_close(file); 
    }
    
    if console_cmd(my_console, "file set_ach6Data") { // activate "1000 money" achievement
        value = console_value(my_console, 1);
        
        file = file_text_open_write("achiev6.txt");
        file_text_write_real(file, value);
        file_text_close(file); 
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_font(fnt_arial);
console_draw(my_console,400,c_gray,c_gray,c_white,c_white,0.7);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
console_toggle(my_console);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
