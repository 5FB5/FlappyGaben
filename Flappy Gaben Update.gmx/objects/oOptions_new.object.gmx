<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//x = (display_get_width() / 2) - 620;
//y = display_get_height() / 2;
globalvar second_menu_active;
second_menu_active = 0;

var file = file_text_open_read("lang.txt");
globalvar langss;
langss = file_text_read_real(file);
file_text_close(file);

if (langss == 0) {
    optionButton[0] = "English";
    optionButton[1] = "Audio";
}
 else {
     optionButton[0] = "Русский";
     optionButton[1] = "Аудио";
 }

space = 64;
mpos = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamepadSupport();

if (language == 0) {
    optionButton[0] = "English";
    optionButton[1] = "Audio";
 }
  else {
      optionButton[0] = "Русский";
      optionButton[1] = "Аудио";
  }

if (second_menu_active == 1) {
    var move = 0;

    if (global.gamepad_realCount &gt; 0) {
        move -= max(gamepad_button_check_pressed(current_id, gp_padu), 0);
        move += max(gamepad_button_check_pressed(current_id, gp_padd), 0);
    }

    move -= max(keyboard_check_pressed(vk_up), keyboard_check_pressed(ord("W")), mouse_wheel_up(), 0);
    move += max(keyboard_check_pressed(vk_down), keyboard_check_pressed(ord("S")), mouse_wheel_down(), 0);

    if (move != 0) {
        mpos += move;
        audio_play_sound(snd_buttonRollOver, 0, false);
   
        if (mpos &lt; 0) mpos = array_length_1d(optionButton) - 1;
        if (mpos &gt; array_length_1d(optionButton) - 1) mpos = 0;
    }
 
    var buttonClick, buttonBackPressed, buttonReleased, buttonBackReleased;

    if (gamepad_realCount &gt; 0) {
        buttonClick = max(keyboard_check_pressed(vk_enter), gamepad_button_check_pressed(current_id, gp_face1), keyboard_check_pressed(vk_space), mouse_check_button_pressed(mb_left), 0);
        buttonReleased = max(keyboard_check_released(vk_enter), gamepad_button_check_released(current_id, gp_face1), keyboard_check_released(vk_space), mouse_check_button_released(mb_left), 0);
        buttonBackPressed = max(keyboard_check_pressed(vk_escape), gamepad_button_check_pressed(current_id, gp_face2), keyboard_check_pressed(vk_backspace), 0);
        buttonBackReleased = max(keyboard_check_released(vk_escape), gamepad_button_check_released(current_id, gp_face2), keyboard_check_released(vk_backspace), 0);
    }
     else {
        buttonClick = max(keyboard_check_pressed(vk_enter), keyboard_check_pressed(vk_space), mouse_check_button_pressed(mb_left), 0);
        buttonReleased = max(keyboard_check_released(vk_enter), keyboard_check_released(vk_space), mouse_check_button_released(mb_left), 0);
        buttonBackPressed = max(keyboard_check_pressed(vk_escape), keyboard_check_pressed(vk_backspace), 0);
        buttonBackReleased = max(keyboard_check_released(vk_escape), keyboard_check_released(vk_backspace), 0);
    }

    if (buttonClick == 1) audio_play_sound(snd_buttonClick, 0, false);
    
    if (buttonReleased == 1) {
        audio_play_sound(snd_buttonClickReleased, 0, false);
        optionScript();
    }
    
    if (buttonBackPressed == 1) audio_play_sound(snd_buttonClick, 0, false);
    
    if (buttonBackReleased == 1) {
        audio_play_sound(snd_buttonClickReleased, 0, false);
        second_menu_active = 0;
        main_menu_active = 1;
        instance_destroy();
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(font_menu_25);
draw_set_color(c_white);

var m;

if (second_menu_active == 1) {
    draw_sprite(sUi_frame, 0, obj_menu.x + 400, obj_menu.y + 145);
    
    for (m = 0; m &lt; array_length_1d(optionButton); m++) {
        draw_text(x + space, y + 0.73 * (m * space), string(optionButton[m]));
    }
    
    draw_sprite(sArrow_small, 0, x + 35, y + 0.73 * (mpos * space));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
